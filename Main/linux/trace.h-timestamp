#ifndef TRACE_H
#define TRACE_H

/* This file is autogenerated by tracetool, do not edit. */

#include "qemu-common.h"

static inline void trace_qemu_malloc(size_t size, void *ptr)
{
}

static inline void trace_qemu_realloc(void *ptr, size_t size, void *newptr)
{
}

static inline void trace_qemu_free(void *ptr)
{
}

static inline void trace_qemu_memalign(size_t alignment, size_t size, void *ptr)
{
}

static inline void trace_qemu_vmalloc(size_t size, void *ptr)
{
}

static inline void trace_qemu_vfree(void *ptr)
{
}

static inline void trace_virtqueue_fill(void *vq, const void *elem, unsigned int len, unsigned int idx)
{
}

static inline void trace_virtqueue_flush(void *vq, unsigned int count)
{
}

static inline void trace_virtqueue_pop(void *vq, void *elem, unsigned int in_num, unsigned int out_num)
{
}

static inline void trace_virtio_queue_notify(void *vdev, int n, void *vq)
{
}

static inline void trace_virtio_irq(void *vq)
{
}

static inline void trace_virtio_notify(void *vdev, void *vq)
{
}

static inline void trace_multiwrite_cb(void *mcb, int ret)
{
}

static inline void trace_bdrv_aio_multiwrite(void *mcb, int num_callbacks, int num_reqs)
{
}

static inline void trace_bdrv_aio_multiwrite_earlyfail(void *mcb)
{
}

static inline void trace_bdrv_aio_multiwrite_latefail(void *mcb, int i)
{
}

static inline void trace_bdrv_aio_flush(void *bs, void *opaque)
{
}

static inline void trace_bdrv_aio_readv(void *bs, int64_t sector_num, int nb_sectors, void *opaque)
{
}

static inline void trace_bdrv_aio_writev(void *bs, int64_t sector_num, int nb_sectors, void *opaque)
{
}

static inline void trace_virtio_blk_req_complete(void *req, int status)
{
}

static inline void trace_virtio_blk_rw_complete(void *req, int ret)
{
}

static inline void trace_virtio_blk_handle_write(void *req, uint64_t sector, size_t nsectors)
{
}

static inline void trace_paio_submit(void *acb, void *opaque, int64_t sector_num, int nb_sectors, int type)
{
}

static inline void trace_paio_complete(void *acb, void *opaque, int ret)
{
}

static inline void trace_paio_cancel(void *acb, void *opaque)
{
}

static inline void trace_cpu_in(unsigned int addr, unsigned int val)
{
}

static inline void trace_cpu_out(unsigned int addr, unsigned int val)
{
}

static inline void trace_balloon_event(void *opaque, unsigned long addr)
{
}

static inline void trace_apic_local_deliver(int vector, uint32_t lvt)
{
}

static inline void trace_apic_deliver_irq(uint8_t dest, uint8_t dest_mode, uint8_t delivery_mode, uint8_t vector_num, uint8_t polarity, uint8_t trigger_mode)
{
}

static inline void trace_cpu_set_apic_base(uint64_t val)
{
}

static inline void trace_cpu_get_apic_base(uint64_t val)
{
}

static inline void trace_apic_mem_readl(uint64_t addr, uint32_t val)
{
}

static inline void trace_apic_mem_writel(uint64_t addr, uint32_t val)
{
}

static inline void trace_apic_reset_irq_delivered(int apic_irq_delivered)
{
}

static inline void trace_apic_get_irq_delivered(int apic_irq_delivered)
{
}

static inline void trace_apic_set_irq(int apic_irq_delivered)
{
}

static inline void trace_cs4231_mem_readl_dreg(uint32_t reg, uint32_t ret)
{
}

static inline void trace_cs4231_mem_readl_reg(uint32_t reg, uint32_t ret)
{
}

static inline void trace_cs4231_mem_writel_reg(uint32_t reg, uint32_t old, uint32_t val)
{
}

static inline void trace_cs4231_mem_writel_dreg(uint32_t reg, uint32_t old, uint32_t val)
{
}

static inline void trace_ecc_mem_writel_mer(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_mdr(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_mfsr(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_vcr(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_dr(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_ecr0(uint32_t val)
{
}

static inline void trace_ecc_mem_writel_ecr1(uint32_t val)
{
}

static inline void trace_ecc_mem_readl_mer(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_mdr(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_mfsr(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_vcr(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_mfar0(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_mfar1(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_dr(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_ecr0(uint32_t ret)
{
}

static inline void trace_ecc_mem_readl_ecr1(uint32_t ret)
{
}

static inline void trace_ecc_diag_mem_writeb(uint64_t addr, uint32_t val)
{
}

static inline void trace_ecc_diag_mem_readb(uint64_t addr, uint32_t ret)
{
}

static inline void trace_lance_mem_readw(uint64_t addr, uint32_t ret)
{
}

static inline void trace_lance_mem_writew(uint64_t addr, uint32_t val)
{
}

static inline void trace_slavio_intctl_mem_readl(uint32_t cpu, uint64_t addr, uint32_t ret)
{
}

static inline void trace_slavio_intctl_mem_writel(uint32_t cpu, uint64_t addr, uint32_t val)
{
}

static inline void trace_slavio_intctl_mem_writel_clear(uint32_t cpu, uint32_t val, uint32_t intreg_pending)
{
}

static inline void trace_slavio_intctl_mem_writel_set(uint32_t cpu, uint32_t val, uint32_t intreg_pending)
{
}

static inline void trace_slavio_intctlm_mem_readl(uint64_t addr, uint32_t ret)
{
}

static inline void trace_slavio_intctlm_mem_writel(uint64_t addr, uint32_t val)
{
}

static inline void trace_slavio_intctlm_mem_writel_enable(uint32_t val, uint32_t intregm_disabled)
{
}

static inline void trace_slavio_intctlm_mem_writel_disable(uint32_t val, uint32_t intregm_disabled)
{
}

static inline void trace_slavio_intctlm_mem_writel_target(uint32_t cpu)
{
}

static inline void trace_slavio_check_interrupts(uint32_t pending, uint32_t intregm_disabled)
{
}

static inline void trace_slavio_set_irq(uint32_t target_cpu, int irq, uint32_t pil, int level)
{
}

static inline void trace_slavio_set_timer_irq_cpu(int cpu, int level)
{
}

static inline void trace_slavio_misc_update_irq_raise(void)
{
}

static inline void trace_slavio_misc_update_irq_lower(void)
{
}

static inline void trace_slavio_set_power_fail(int power_failing, uint8_t config)
{
}

static inline void trace_slavio_cfg_mem_writeb(uint32_t val)
{
}

static inline void trace_slavio_cfg_mem_readb(uint32_t ret)
{
}

static inline void trace_slavio_diag_mem_writeb(uint32_t val)
{
}

static inline void trace_slavio_diag_mem_readb(uint32_t ret)
{
}

static inline void trace_slavio_mdm_mem_writeb(uint32_t val)
{
}

static inline void trace_slavio_mdm_mem_readb(uint32_t ret)
{
}

static inline void trace_slavio_aux1_mem_writeb(uint32_t val)
{
}

static inline void trace_slavio_aux1_mem_readb(uint32_t ret)
{
}

static inline void trace_slavio_aux2_mem_writeb(uint32_t val)
{
}

static inline void trace_slavio_aux2_mem_readb(uint32_t ret)
{
}

static inline void trace_apc_mem_writeb(uint32_t val)
{
}

static inline void trace_apc_mem_readb(uint32_t ret)
{
}

static inline void trace_slavio_sysctrl_mem_writel(uint32_t val)
{
}

static inline void trace_slavio_sysctrl_mem_readl(uint32_t ret)
{
}

static inline void trace_slavio_led_mem_writew(uint32_t val)
{
}

static inline void trace_slavio_led_mem_readw(uint32_t ret)
{
}

static inline void trace_slavio_timer_get_out(uint64_t limit, uint32_t counthigh, uint32_t count)
{
}

static inline void trace_slavio_timer_irq(uint32_t counthigh, uint32_t count)
{
}

static inline void trace_slavio_timer_mem_readl_invalid(uint64_t addr)
{
}

static inline void trace_slavio_timer_mem_readl(uint64_t addr, uint32_t ret)
{
}

static inline void trace_slavio_timer_mem_writel(uint64_t addr, uint32_t val)
{
}

static inline void trace_slavio_timer_mem_writel_limit(unsigned int timer_index, uint64_t count)
{
}

static inline void trace_slavio_timer_mem_writel_counter_invalid(void)
{
}

static inline void trace_slavio_timer_mem_writel_status_start(unsigned int timer_index)
{
}

static inline void trace_slavio_timer_mem_writel_status_stop(unsigned int timer_index)
{
}

static inline void trace_slavio_timer_mem_writel_mode_user(unsigned int timer_index)
{
}

static inline void trace_slavio_timer_mem_writel_mode_counter(unsigned int timer_index)
{
}

static inline void trace_slavio_timer_mem_writel_mode_invalid(void)
{
}

static inline void trace_slavio_timer_mem_writel_invalid(uint64_t addr)
{
}

static inline void trace_ledma_memory_read(uint64_t addr)
{
}

static inline void trace_ledma_memory_write(uint64_t addr)
{
}

static inline void trace_sparc32_dma_set_irq_raise(void)
{
}

static inline void trace_sparc32_dma_set_irq_lower(void)
{
}

static inline void trace_espdma_memory_read(uint32_t addr)
{
}

static inline void trace_espdma_memory_write(uint32_t addr)
{
}

static inline void trace_sparc32_dma_mem_readl(uint64_t addr, uint32_t ret)
{
}

static inline void trace_sparc32_dma_mem_writel(uint64_t addr, uint32_t old, uint32_t val)
{
}

static inline void trace_sparc32_dma_enable_raise(void)
{
}

static inline void trace_sparc32_dma_enable_lower(void)
{
}

static inline void trace_sun4m_cpu_interrupt(unsigned int level)
{
}

static inline void trace_sun4m_cpu_reset_interrupt(unsigned int level)
{
}

static inline void trace_sun4m_cpu_set_irq_raise(int level)
{
}

static inline void trace_sun4m_cpu_set_irq_lower(int level)
{
}

static inline void trace_sun4m_iommu_mem_readl(uint64_t addr, uint32_t ret)
{
}

static inline void trace_sun4m_iommu_mem_writel(uint64_t addr, uint32_t val)
{
}

static inline void trace_sun4m_iommu_mem_writel_ctrl(uint64_t iostart)
{
}

static inline void trace_sun4m_iommu_mem_writel_tlbflush(uint32_t val)
{
}

static inline void trace_sun4m_iommu_mem_writel_pgflush(uint32_t val)
{
}

static inline void trace_sun4m_iommu_page_get_flags(uint64_t pa, uint64_t iopte, uint32_t ret)
{
}

static inline void trace_sun4m_iommu_translate_pa(uint64_t addr, uint64_t pa, uint32_t iopte)
{
}

static inline void trace_sun4m_iommu_bad_addr(uint64_t addr)
{
}

static inline void trace_usb_desc_device(int addr, int len, int ret)
{
}

static inline void trace_usb_desc_device_qualifier(int addr, int len, int ret)
{
}

static inline void trace_usb_desc_config(int addr, int index, int len, int ret)
{
}

static inline void trace_usb_desc_other_speed_config(int addr, int index, int len, int ret)
{
}

static inline void trace_usb_desc_string(int addr, int index, int len, int ret)
{
}

static inline void trace_usb_set_addr(int addr)
{
}

static inline void trace_usb_set_config(int addr, int config, int ret)
{
}

static inline void trace_usb_clear_device_feature(int addr, int feature, int ret)
{
}

static inline void trace_usb_set_device_feature(int addr, int feature, int ret)
{
}

static inline void trace_vm_state_notify(int running, int reason)
{
}

static inline void trace_qed_alloc_l2_cache_entry(void *l2_cache, void *entry)
{
}

static inline void trace_qed_unref_l2_cache_entry(void *entry, int ref)
{
}

static inline void trace_qed_find_l2_cache_entry(void *l2_cache, void *entry, uint64_t offset, int ref)
{
}

static inline void trace_qed_read_table(void *s, uint64_t offset, void *table)
{
}

static inline void trace_qed_read_table_cb(void *s, void *table, int ret)
{
}

static inline void trace_qed_write_table(void *s, uint64_t offset, void *table, unsigned int index, unsigned int n)
{
}

static inline void trace_qed_write_table_cb(void *s, void *table, int flush, int ret)
{
}

static inline void trace_qed_aio_complete(void *s, void *acb, int ret)
{
}

static inline void trace_qed_aio_setup(void *s, void *acb, int64_t sector_num, int nb_sectors, void *opaque, int is_write)
{
}

static inline void trace_qed_aio_next_io(void *s, void *acb, int ret, uint64_t cur_pos)
{
}

static inline void trace_qed_aio_read_data(void *s, void *acb, int ret, uint64_t offset, size_t len)
{
}

static inline void trace_qed_aio_write_data(void *s, void *acb, int ret, uint64_t offset, size_t len)
{
}

static inline void trace_qed_aio_write_prefill(void *s, void *acb, uint64_t start, size_t len, uint64_t offset)
{
}

static inline void trace_qed_aio_write_postfill(void *s, void *acb, uint64_t start, size_t len, uint64_t offset)
{
}

static inline void trace_qed_aio_write_main(void *s, void *acb, int ret, uint64_t offset, size_t len)
{
}

static inline void trace_grlib_gptimer_enable(int id, uint32_t count)
{
}

static inline void trace_grlib_gptimer_disabled(int id, uint32_t config)
{
}

static inline void trace_grlib_gptimer_restart(int id, uint32_t reload)
{
}

static inline void trace_grlib_gptimer_set_scaler(uint32_t scaler, uint32_t freq)
{
}

static inline void trace_grlib_gptimer_hit(int id)
{
}

static inline void trace_grlib_gptimer_readl(int id, const char *s, uint32_t val)
{
}

static inline void trace_grlib_gptimer_writel(int id, const char *s, uint32_t val)
{
}

static inline void trace_grlib_gptimer_unknown_register(const char *op, uint64_t val)
{
}

static inline void trace_grlib_irqmp_check_irqs(uint32_t pend, uint32_t force, uint32_t mask, uint32_t lvl1, uint32_t lvl2)
{
}

static inline void trace_grlib_irqmp_ack(int intno)
{
}

static inline void trace_grlib_irqmp_set_irq(int irq)
{
}

static inline void trace_grlib_irqmp_unknown_register(const char *op, uint64_t val)
{
}

static inline void trace_grlib_apbuart_event(int event)
{
}

static inline void trace_grlib_apbuart_unknown_register(const char *op, uint64_t val)
{
}

static inline void trace_leon3_set_irq(int intno)
{
}

static inline void trace_leon3_reset_irq(int intno)
{
}

static inline void trace_spice_vmc_write(ssize_t out, int len)
{
}

static inline void trace_spice_vmc_read(int bytes, int len)
{
}

static inline void trace_spice_vmc_register_interface(void *scd)
{
}

static inline void trace_spice_vmc_unregister_interface(void *scd)
{
}

static inline void trace_lm32_pic_raise_irq(void)
{
}

static inline void trace_lm32_pic_lower_irq(void)
{
}

static inline void trace_lm32_pic_interrupt(int irq, int level)
{
}

static inline void trace_lm32_pic_set_im(uint32_t im)
{
}

static inline void trace_lm32_pic_set_ip(uint32_t ip)
{
}

static inline void trace_lm32_pic_get_im(uint32_t im)
{
}

static inline void trace_lm32_pic_get_ip(uint32_t ip)
{
}

static inline void trace_lm32_juart_get_jtx(uint32_t value)
{
}

static inline void trace_lm32_juart_set_jtx(uint32_t value)
{
}

static inline void trace_lm32_juart_get_jrx(uint32_t value)
{
}

static inline void trace_lm32_juart_set_jrx(uint32_t value)
{
}

static inline void trace_lm32_timer_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_lm32_timer_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_lm32_timer_hit(void)
{
}

static inline void trace_lm32_timer_irq_state(int level)
{
}

static inline void trace_lm32_uart_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_lm32_uart_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_lm32_uart_irq_state(int level)
{
}

static inline void trace_lm32_sys_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_ac97_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_ac97_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_ac97_pulse_irq_crrequest(void)
{
}

static inline void trace_milkymist_ac97_pulse_irq_crreply(void)
{
}

static inline void trace_milkymist_ac97_pulse_irq_dmaw(void)
{
}

static inline void trace_milkymist_ac97_pulse_irq_dmar(void)
{
}

static inline void trace_milkymist_ac97_in_cb(int avail, uint32_t remaining)
{
}

static inline void trace_milkymist_ac97_in_cb_transferred(int transferred)
{
}

static inline void trace_milkymist_ac97_out_cb(int free, uint32_t remaining)
{
}

static inline void trace_milkymist_ac97_out_cb_transferred(int transferred)
{
}

static inline void trace_milkymist_hpdmc_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_hpdmc_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_memcard_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_memcard_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_minimac_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_minimac_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_minimac_mdio_write(uint8_t phy_addr, uint8_t addr, uint16_t value)
{
}

static inline void trace_milkymist_minimac_mdio_read(uint8_t phy_addr, uint8_t addr, uint16_t value)
{
}

static inline void trace_milkymist_minimac_tx_frame(uint32_t length)
{
}

static inline void trace_milkymist_minimac_rx_frame(const void *buf, uint32_t length)
{
}

static inline void trace_milkymist_minimac_drop_rx_frame(const void *buf)
{
}

static inline void trace_milkymist_minimac_rx_transfer(const void *buf, uint32_t length)
{
}

static inline void trace_milkymist_minimac_pulse_irq_rx(void)
{
}

static inline void trace_milkymist_minimac_pulse_irq_tx(void)
{
}

static inline void trace_milkymist_pfpu_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_pfpu_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_pfpu_vectout(uint32_t a, uint32_t b, uint32_t dma_ptr)
{
}

static inline void trace_milkymist_pfpu_pulse_irq(void)
{
}

static inline void trace_milkymist_softusb_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_softusb_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_softusb_mevt(uint8_t m)
{
}

static inline void trace_milkymist_softusb_kevt(uint8_t m)
{
}

static inline void trace_milkymist_softusb_mouse_event(int dx, int dy, int dz, int bs)
{
}

static inline void trace_milkymist_softusb_pulse_irq(void)
{
}

static inline void trace_milkymist_sysctl_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_sysctl_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_sysctl_icap_write(uint32_t value)
{
}

static inline void trace_milkymist_sysctl_start_timer0(void)
{
}

static inline void trace_milkymist_sysctl_stop_timer0(void)
{
}

static inline void trace_milkymist_sysctl_start_timer1(void)
{
}

static inline void trace_milkymist_sysctl_stop_timer1(void)
{
}

static inline void trace_milkymist_sysctl_pulse_irq_timer0(void)
{
}

static inline void trace_milkymist_sysctl_pulse_irq_timer1(void)
{
}

static inline void trace_milkymist_tmu2_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_tmu2_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_tmu2_start(void)
{
}

static inline void trace_milkymist_tmu2_pulse_irq(void)
{
}

static inline void trace_milkymist_uart_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_uart_memory_write(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_uart_pulse_irq_rx(void)
{
}

static inline void trace_milkymist_uart_pulse_irq_tx(void)
{
}

static inline void trace_milkymist_vgafb_memory_read(uint32_t addr, uint32_t value)
{
}

static inline void trace_milkymist_vgafb_memory_write(uint32_t addr, uint32_t value)
{
}

#endif /* TRACE_H */
